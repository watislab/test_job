[alembic]
# Path to the migrations directory.
script_location = db_maintenance/migrations

# SQLAlchemy database URL.  Required.
sqlalchemy.url = postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${DB_IMAGE_PROCESSING_HOST}:5432/${POSTGRES_DB}

# Если нужно, укажите схему базы данных
# default_schema = your_schema_name

# Set to 'true' to run the environment during
# the 'revision' command, regardless of whether the
# script directory can be loaded successfully.
# Set to boolean value of False for the default.
# will_migrate_script_location = false

# Set to 'true' to not run the environment during
# the 'upgrade' command.
# Set to boolean value of False for the default.
# dont_migrate_script_location = false

# Py module to use for the dialect when generating
# migrations.  Defaults to empty string.
# prepend_module_to_pk_name = false

# Template used to generate migration files.
# file_template = %%(year)d%%(month).2d%%(day).2d_%%(hour).2d%%(minute).2d%%(second).2d_%%(rev)s_%%(slug)s

[loggers]
keys = root,sqlalchemy,alembic

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARN
handlers = console

[logger_sqlalchemy]
level = INFO
handlers =
qualname = sqlalchemy.engine

[logger_alembic]
level = INFO
handlers =
qualname = alembic

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S